{"version":3,"sources":["src/index.es6"],"names":[],"mappings":"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","file":"index.util.js","sourcesContent":["// Utilities Index\n\n'use strict';\n\n/**\n * All values are multipliers; given that\n * 1 [parent name unit] === 1 [property name unit]\n */\n\nclass Conversion {\n\n\t/**\n\t * [constructor description]\n\t * @param  {string} input Containers numeric value and \n\t *                        \tunit to be converted, delimited\n\t *                        \tby a space.\n\t * @return {object}       Class object\n\t */\n\t\n\tconstructor(i) {\n\t\tthis.check = (function(i) {\n\t\t\tconsole.log(i)\n\t\t})(i)\n\t\tthis.num = i ? parseFloat(i.split(' ')[0]) : undefined\n\t\tthis.unit = i ? i.split(' ')[1] : undefined\n\t\tthis.options = {\n\t\t\tstrict: false,\n\t\t\toutput: 'number'\n\t\t}\n\t\tthis.table = {\n\t\t\ttemp: {\n\t\t\t\tabbr: {\n\t\t\t\t\tdegC: 'celsius',\n\t\t\t\t\tdegF: 'fahrenheit'\n\t\t\t\t},\n\t\t\t\tcelsius: {},\n\t\t\t\tfahrenheit: {}\n\t\t\t},\n\t\t\tdistance: {\n\t\t\t\tabbr: {\n\t\t\t\t\tcm: 'centimeters',\n\t\t\t\t\tft: 'feet',\n\t\t\t\t\tin: 'inches',\n\t\t\t\t\tkm: 'kilometers',\n\t\t\t\t\tm: 'meters',\n\t\t\t\t\tmi: 'miles',\n\t\t\t\t\tmm: 'millimeters',\n\t\t\t\t\tyd: 'yards'\n\t\t\t\t},\n\t\t\t\tfeet: {\n\t\t\t\t\ttoInches: 12,\n\t\t\t\t\ttoMeters: 0.3048, // eg 1ft === 0.3048m\n\t\t\t\t\ttoYards: 0.3333\n\t\t\t\t},\n\t\t\t\tinches: {\n\t\t\t\t\ttoFeet: 0.0833\n\t\t\t\t},\n\t\t\t\tmeters: {\n\t\t\t\t\ttoFeet: 3.2808\n\t\t\t\t},\n\t\t\t\tyards: {\n\t\t\t\t\ttoFeet: 3\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.info = {\n\t\t\tdefault_system: 'Imperial'\n\t\t}\n\t}\n\ttoFeet(options=this.options) {\n\t\tvar table = this.table.distance[`${this.table.distance.abbr[`${this.unit}`]}`]\n\t\tvar product\n\t\tswitch(this.unit) {\n\t\t\tcase 'in':\n\t\t\t\tproduct = this.num*table.toFeet\n\t\t\t\tbreak;\n\t\t}\n\t\tproduct = options.strict ? product : Math.round(product)\n\t\treturn product\n\t}\n}\n\nclass TypeCheck {\n\tconstructor(v,t) {\n\t\tthis._var = v\n\t\tthis._type = t\n\t}\n\ttype(_var) {\n\t\t_var = _var || this._var\n\t\treturn typeof _var\n\t}\n\tisExpected(_var, _type) {\n\t\t_var = _var || this._var\n\t\t_type = _type || this._type\n\t\treturn typeof _var === _type ? true : false\n\t}\n\tisString(_var) {\n\t\t_var = _var || this._var\n\t\treturn typeof _var === 'string' ? true : false\n\t}\n\tisNum(_var) {\n\t\t_var = _var || this._var\n\t\tif (typeof parseInt(_var) === 'number' && isNaN(_var) === false) {\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\tisInt(_var) {\n\t\t_var = _var || this._var\n\t\tif (_var.toString().indexOf('.') !== -1 || typeof _var !== 'number') {\n\t\t\treturn false\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n\tisFloat(_var) {\n\t\t_var = _var || this._var\n\t\tif (_var.toString().indexOf('.') !== -1) {\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\tisArray(_var) {\n\t\t_var = _var || this._var\n\t\treturn _var.length >= 0 ? true : false\n\t}\n\tisObject(_var) {\n\t\t_var = _var || this._var\n\t\tif (typeof _var === \"object\" &&  _var.length === undefined) {\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t}\n\tisFunction(_var) {\n\t\t_var = _var || this._var\n\t\treturn typeof _var === 'function' ? true : false\n\t}\n}\n\nvar convert = (i) => new Conversion(i)\nvar check = (v,t) => new TypeCheck(v,t)\n\nmodule.exports = {\n  convert: convert,\n  check: check\n}"]}